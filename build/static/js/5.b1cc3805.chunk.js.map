{"version":3,"sources":["components/ContactForm/ContactForm.module.css","components/Filter/Filter.module.css","components/ContactsList/ContactsList.module.css","redux/contacts/contacts-selectors.js","components/ContactForm/ContactForm.js","redux/contacts/contacts-operations.js","components/Filter/Filter.js","components/ContactsList/ContactsList.js","pages/Contacts/Contacts.js"],"names":["module","exports","getContacts","state","contacts","items","getFilteredContacts","createSelector","filter","el","name","toLowerCase","includes","ContactForm","useSelector","dispatch","useDispatch","addContacts","user","contact","a","ADDCONTACTREQUEST","axios","post","response","data","ADDCONTACTSUCCESS","ADDCONTACTERROR","useState","setName","number","setNumber","handleChange","e","target","value","Form","className","style","form","onSubmit","preventDefault","every","id","shortid","generate","alert","reset","Group","controlId","Label","Control","onChange","type","placeholder","Button","addContactBtn","variant","Filter","filterInput","title","FILTERCHANGE","ContactsList","deleteContacts","contactId","DELETECONTACTREQUEST","delete","DELETECONTACTSUCCESS","DELETECONTACTERROR","useEffect","FETCHCONTACTREQUEST","get","FETCHCONTACTSUCCESS","FETCHCONTACTERROR","ListGroup","contactsList","map","Item","contactsListItem","deleteButton","onClick","Contacts"],"mappings":"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","file":"static/js/5.b1cc3805.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"form\":\"ContactForm_form__3Vj52\",\"addContactBtn\":\"ContactForm_addContactBtn__1awGe\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"title\":\"Filter_title__2943E\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"contactsList\":\"ContactsList_contactsList__28TXs\",\"contactsListItem\":\"ContactsList_contactsListItem__34atk\",\"deleteButton\":\"ContactsList_deleteButton__oFZgY\"};","import { createSelector } from \"@reduxjs/toolkit\";\r\n\r\nexport const getFilter = (state) => state.contacts.filter;\r\n\r\nexport const getContacts = (state) => state.contacts.items;\r\n\r\nexport const getFilteredContacts = createSelector(\r\n  [getFilter, getContacts],\r\n  (filter, contacts) =>\r\n    contacts.filter((el) => el.name.toLowerCase().includes(filter))\r\n);\r\n","import React, { useState } from \"react\";\r\nimport { useSelector, useDispatch } from \"react-redux\";\r\nimport { Button, Form } from \"react-bootstrap\";\r\nimport shortid from \"shortid\";\r\nimport { addContact } from \"../../redux/contacts/contacts-operations\";\r\nimport { getContacts } from \"../../redux/contacts/contacts-selectors\";\r\nimport \"bootstrap/dist/css/bootstrap.min.css\";\r\nimport style from \"./ContactForm.module.css\";\r\n\r\nexport default function ContactForm() {\r\n  const contacts = useSelector(getContacts);\r\n  const dispatch = useDispatch();\r\n  const addContacts = (user) => dispatch(addContact(user));\r\n  const [name, setName] = useState(\"\");\r\n  const [number, setNumber] = useState(\"\");\r\n  const handleChange = (e) => {\r\n    switch (e.target.name) {\r\n      case \"name\":\r\n        setName(e.target.value);\r\n        break;\r\n      case \"number\":\r\n        setNumber(e.target.value);\r\n        break;\r\n      default:\r\n        return;\r\n    }\r\n  };\r\n  return (\r\n    <Form\r\n      className={style.form}\r\n      onSubmit={(e) => {\r\n        e.preventDefault();\r\n        if (\r\n          contacts.every((el) => el.name.toLowerCase() !== name.toLowerCase())\r\n        ) {\r\n          addContacts({\r\n            id: shortid.generate(),\r\n            name: name,\r\n            number: number,\r\n          });\r\n        } else {\r\n          alert(`${name} is already in contacts.`);\r\n        }\r\n        e.target.reset();\r\n      }}\r\n    >\r\n      <Form.Group controlId=\"formBasicName\">\r\n        <Form.Label>Name</Form.Label>\r\n        <Form.Control\r\n          onChange={handleChange}\r\n          name=\"name\"\r\n          type=\"name\"\r\n          placeholder=\"Enter name\"\r\n        />\r\n      </Form.Group>\r\n      <Form.Group controlId=\"formBasicPhone\">\r\n        <Form.Label>Phone number</Form.Label>\r\n        <Form.Control\r\n          onChange={handleChange}\r\n          name=\"number\"\r\n          type=\"tel\"\r\n          placeholder=\"Phone number\"\r\n        />\r\n      </Form.Group>\r\n      <Button className={style.addContactBtn} variant=\"primary\" type=\"submit\">\r\n        Add contact\r\n      </Button>\r\n    </Form>\r\n  );\r\n}\r\n","import axios from \"axios\";\r\nimport {\r\n  ADDCONTACTREQUEST,\r\n  ADDCONTACTSUCCESS,\r\n  ADDCONTACTERROR,\r\n  FETCHCONTACTREQUEST,\r\n  FETCHCONTACTERROR,\r\n  FETCHCONTACTSUCCESS,\r\n  DELETECONTACTREQUEST,\r\n  DELETECONTACTSUCCESS,\r\n  DELETECONTACTERROR,\r\n} from \"./contacts-actions\";\r\n\r\nexport const fetchContacts = () => async (dispatch) => {\r\n  dispatch(FETCHCONTACTREQUEST());\r\n  try {\r\n    const response = await axios.get(\"/contacts\");\r\n    const data = await response.data;\r\n\r\n    dispatch(FETCHCONTACTSUCCESS(data));\r\n  } catch (error) {\r\n    dispatch(FETCHCONTACTERROR(error));\r\n  }\r\n};\r\n\r\nexport const addContact = (contact) => async (dispatch) => {\r\n  dispatch(ADDCONTACTREQUEST());\r\n  try {\r\n    const response = await axios.post(\"/contacts\", contact);\r\n    const data = await response.data;\r\n\r\n    dispatch(ADDCONTACTSUCCESS(data));\r\n  } catch (error) {\r\n    dispatch(ADDCONTACTERROR(error));\r\n  }\r\n};\r\n\r\nexport const deleteContact = (id) => async (dispatch) => {\r\n  dispatch(DELETECONTACTREQUEST());\r\n  try {\r\n    await axios.delete(`/contacts/${id}`);\r\n    dispatch(DELETECONTACTSUCCESS(id));\r\n  } catch (error) {\r\n    dispatch(DELETECONTACTERROR(error));\r\n  }\r\n};\r\n","import React from \"react\";\r\nimport { useDispatch } from \"react-redux\";\r\nimport { Form } from \"react-bootstrap\";\r\nimport shortid from \"shortid\";\r\nimport { FILTERCHANGE } from \"../../redux/contacts/contacts-actions\";\r\nimport \"bootstrap/dist/css/bootstrap.min.css\";\r\nimport style from \"./Filter.module.css\";\r\n\r\nexport default function Filter() {\r\n  const dispatch = useDispatch();\r\n  const filterChange = (filter) => dispatch(FILTERCHANGE(filter));\r\n  const filterInput = shortid.generate();\r\n  return (\r\n    <Form.Group>\r\n      <Form.Label className={style.title}>Find contacts by name</Form.Label>\r\n      <Form.Control\r\n        id={filterInput}\r\n        type=\"text\"\r\n        onChange={(e) => {\r\n          filterChange(e.target.value.toLowerCase());\r\n        }}\r\n        name=\"filter\"\r\n      ></Form.Control>\r\n    </Form.Group>\r\n  );\r\n}\r\n","import React, { useEffect } from \"react\";\r\nimport { useSelector, useDispatch } from \"react-redux\";\r\nimport { ListGroup, Button } from \"react-bootstrap\";\r\nimport {\r\n  fetchContacts,\r\n  deleteContact,\r\n} from \"../../redux/contacts/contacts-operations\";\r\nimport { getFilteredContacts } from \"../../redux/contacts/contacts-selectors\";\r\nimport \"bootstrap/dist/css/bootstrap.min.css\";\r\nimport style from \"./ContactsList.module.css\";\r\n\r\nexport default function ContactsList() {\r\n  const contacts = useSelector(getFilteredContacts);\r\n  const dispatch = useDispatch();\r\n  const deleteContacts = (contactId) => dispatch(deleteContact(contactId));\r\n  useEffect(() => {\r\n    dispatch(fetchContacts());\r\n  }, [dispatch]);\r\n\r\n  return (\r\n    <ListGroup className={style.contactsList}>\r\n      {contacts.map((el) => {\r\n        return (\r\n          <ListGroup.Item className={style.contactsListItem} key={el.id}>\r\n            <p>\r\n              {el.name} : {el.number}\r\n            </p>\r\n            <Button\r\n              className={style.deleteButton}\r\n              variant=\"primary\"\r\n              onClick={() => deleteContacts(el.id)}\r\n            >\r\n              Delete\r\n            </Button>\r\n          </ListGroup.Item>\r\n        );\r\n      })}\r\n    </ListGroup>\r\n  );\r\n}\r\n","import React from \"react\";\r\nimport ContactForm from \"../../components/ContactForm/ContactForm\";\r\nimport Filter from \"../../components/Filter/Filter\";\r\nimport ContactsList from \"../../components/ContactsList/ContactsList\";\r\n\r\nconst Contacts = () => {\r\n  return (\r\n    <div className=\"wrapper\">\r\n      <h2>Phonebook</h2>\r\n      <ContactForm />\r\n      <h2 className=\"contactsTitle\">Contacts</h2>\r\n      <Filter />\r\n      <ContactsList />\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Contacts;\r\n"],"sourceRoot":""}