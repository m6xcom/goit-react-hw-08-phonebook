{"version":3,"sources":["components/AppBar/AuthNav/AuthNav.module.css","redux/user/user-operations.js","components/AppBar/UserMenu/UserMenu.module.css","redux/user/user-actions.js","components/AppBar/AppBar.module.css","redux/contacts/contacts-actions.js","redux/contacts/contacts-reducer.js","redux/user/user-reducer.js","redux/store.js","services/routes.js","redux/user/user-selectors.js","components/AppBar/PrivateRoute.js","components/AppBar/PublicRoute.js","components/AppBar/AuthNav/AuthNav.js","components/AppBar/UserMenu/UserMenu.js","components/AppBar/AppBar.js","components/App/App.js","index.js"],"names":["module","exports","axios","defaults","baseURL","token","headers","common","Authorization","registerUser","user","dispatch","a","REGISTERUSERREQUEST","post","response","data","REGISTERUSERSUCCESS","REGISTERUSERERROR","message","loginUser","LOGINUSERREQUEST","LOGINUSERSUCCESS","LOGINUSERERROR","logoutUser","LOGOUTUSERREQUEST","LOGOUTUSERSUCCESS","LOGOUTUSERERROR","getCurrentUser","getState","persistedToken","auth","GETCURUSERREQUEST","get","GETCURUSERSUCCESS","GETCURUSERERROR","createAction","ADDCONTACTREQUEST","ADDCONTACTSUCCESS","ADDCONTACTERROR","FETCHCONTACTREQUEST","FETCHCONTACTSUCCESS","FETCHCONTACTERROR","DELETECONTACTREQUEST","DELETECONTACTSUCCESS","DELETECONTACTERROR","FILTERCHANGE","items","createReducer","_","payload","state","filter","el","id","type","error","loading","contacts","combineReducers","userInitialState","name","email","isAuthenticated","userConfig","key","storage","whitelist","store","configureStore","reducer","persistReducer","devTools","process","middleware","getDefaultMiddleware","serializableCheck","ignoredActions","FLUSH","REHYDRATE","PAUSE","PERSIST","PURGE","REGISTER","persistor","persistStore","routes","getEmail","isAuth","connect","Component","component","routeProps","render","props","to","AuthNav","className","style","navList","navListItem","navLink","activeClassName","activeNavLink","exact","mapDispatchToProps","onLogout","userMenu","onClick","nav","RegisterPage","lazy","LoginPage","Contacts","App","this","fallback","path","ReactDOM","StrictMode","document","getElementById"],"mappings":"kIACAA,EAAOC,QAAU,CAAC,QAAU,yBAAyB,QAAU,yBAAyB,cAAgB,iC,6NCexGC,IAAMC,SAASC,QAAU,wCAEzB,IAAMC,EAAQ,SACRA,GACFH,IAAMC,SAASG,QAAQC,OAAOC,cAA9B,iBAAwDH,IAFtDA,EAAQ,WAKVH,IAAMC,SAASG,QAAQC,OAAOC,cAAgB,IAIrCC,EAAe,SAACC,GAAD,8CAAU,WAAOC,GAAP,eAAAC,EAAA,6DACpCD,EAASE,eAD2B,kBAGXX,IAAMY,KAAK,gBAAiBJ,GAHjB,OAG5BK,EAH4B,OAIlCV,EAAUU,EAASC,KAAKX,OACxBM,EAASM,YAAoBF,EAASC,OALJ,gDAOlCL,EAASO,YAAkB,KAAMC,UAPC,yDAAV,uDAWfC,EAAY,SAACV,GAAD,8CAAU,WAAOC,GAAP,eAAAC,EAAA,6DACjCD,EAASU,KADwB,kBAGRnB,IAAMY,KAAK,eAAgBJ,GAHnB,OAGzBK,EAHyB,OAI/BV,EAAUU,EAASC,KAAKX,OACxBM,EAASW,YAAiBP,EAASC,OALJ,gDAO/BL,EAASY,YAAe,KAAMJ,UAPC,yDAAV,uDAWZK,EAAa,yDAAM,WAAOb,GAAP,SAAAC,EAAA,6DAC9BD,EAASc,KADqB,kBAGtBvB,IAAMY,KAAK,iBAHW,OAI5BT,IACAM,EAASe,eALmB,gDAO5Bf,EAASgB,YAAgB,KAAMR,UAPH,yDAAN,uDAWbS,EAAiB,yDAAM,WAAOjB,EAAUkB,GAAjB,mBAAAjB,EAAA,2DAG9BiB,IADaC,EAFiB,EAEhCC,KAAQ1B,MAFwB,wDASlCA,EAAUyB,GACVnB,EAASqB,KAVyB,kBAYT9B,IAAM+B,IAAI,kBAZD,OAY1BlB,EAZ0B,OAchCJ,EAASuB,YAAkBnB,EAASC,OAdJ,kDAgBhCL,EAASwB,YAAgB,KAAMhB,UAhBC,0DAAN,0D,mBC3D9BnB,EAAOC,QAAU,CAAC,SAAW,2BAA2B,KAAO,yB,+BCD/D,maAEaY,EAAsBuB,YAAa,4BACnCnB,EAAsBmB,YAAa,4BACnClB,EAAoBkB,YAAa,0BAEjCf,EAAmBe,YAAa,yBAChCd,EAAmBc,YAAa,yBAChCb,EAAiBa,YAAa,uBAE9BX,EAAoBW,YAAa,0BACjCV,EAAoBU,YAAa,0BACjCT,EAAkBS,YAAa,wBAE/BJ,EAAoBI,YAAa,8BACjCF,EAAoBE,YAAa,8BACjCD,EAAkBC,YAAa,6B,mBCf5CpC,EAAOC,QAAU,CAAC,IAAM,sB,oDCDxB,+VAEaoC,EAAoBD,YAAa,8BAEjCE,EAAoBF,YAAa,8BAEjCG,EAAkBH,YAAa,4BAE/BI,EAAsBJ,YAAa,gCAEnCK,EAAsBL,YAAa,gCAEnCM,EAAoBN,YAAa,8BAEjCO,EAAuBP,YAClC,iCAGWQ,EAAuBR,YAClC,iCAGWS,EAAqBT,YAAa,+BAElCU,EAAeV,YAAa,0B,4MCTnCW,EAAQC,YAAc,IAAD,mBACxBP,KAAsB,SAACQ,EAAD,GACrB,OADyC,EAAdC,WADJ,cAKxBZ,KAAoB,SAACa,EAAD,GAAyB,IAAfD,EAAc,EAAdA,QAC7B,MAAM,GAAN,mBAAWC,GAAX,CAAkBD,OANK,cASxBN,KAAuB,SAACO,EAAD,GAAyB,IAAfD,EAAc,EAAdA,QAChC,OAAOC,EAAMC,QAAO,SAACC,GAAD,OAAQA,EAAGC,KAAOJ,QAVf,IAcrBE,EAASJ,YAAc,GAAD,eACzBF,IAAaS,MAAO,SAACJ,EAAD,YAAUD,YAG3BM,EAAQR,YAAc,IAAD,mBACxBN,KAAoB,SAACO,EAAD,GACnB,OADuC,EAAdC,QACV/B,WAFQ,cAIxBoB,KAAkB,SAACU,EAAD,GACjB,OADqC,EAAdC,QACR/B,WALQ,cAOxB0B,KAAqB,SAACI,EAAD,GACpB,OADwC,EAAdC,QACX/B,WARQ,IAYrBsC,EAAUT,YAAc,IAAD,mBAC1BX,KAAoB,kBAAM,KADA,cAE1BC,KAAoB,kBAAM,KAFA,cAG1BC,KAAkB,kBAAM,KAHE,cAI1BC,KAAsB,kBAAM,KAJF,cAK1BC,KAAsB,kBAAM,KALF,cAM1BC,KAAoB,kBAAM,KANA,cAO1BC,KAAuB,kBAAM,KAPH,cAQ1BC,KAAuB,kBAAM,KARH,cAS1BC,KAAqB,kBAAM,KATD,IAYhBa,EAAWC,YAAgB,CACtCZ,QACAK,SACAI,QACAC,Y,OChDIG,EAAmB,CAAEC,KAAM,KAAMC,MAAO,MAExCpD,EAAOsC,YAAcY,GAAD,iBAAC,EACxB3C,KAAsB,SAACgC,EAAD,YAAMC,QAAsBxC,QAD3B,YAAC,EAExBY,KAAmB,SAAC2B,EAAD,YAAMC,QAAsBxC,QAFxB,YAAC,EAGxBgB,KAAoB,kBAAMkC,KAHH,YAAC,EAIxB1B,KAAoB,SAACe,EAAD,YAAMC,WAJH,IAOpB7C,EAAQ2C,YAAc,MAAD,mBACxB/B,KAAsB,SAACgC,EAAD,YAAMC,QAAsB7C,SAD1B,cAExBiB,KAAmB,SAAC2B,EAAD,YAAMC,QAAsB7C,SAFvB,cAGxBqB,KAAoB,kBAAM,QAHF,IAMrB8B,EAAQR,YAAc,MAAD,iBAAC,EACzB9B,KAAoB,SAAC+B,EAAD,YAAMC,WADF,YAAC,EAEzB3B,KAAiB,SAAC0B,EAAD,YAAMC,WAFC,YAAC,EAGzBvB,KAAkB,SAACsB,EAAD,YAAMC,WAHA,YAAC,EAIzBf,KAAkB,SAACc,EAAD,YAAMC,WAJA,IAOrBa,EAAkBf,YAAc,MAAD,iBAAC,EACnC/B,KAAsB,kBAAM,KADM,YAAC,EAEnCC,KAAoB,kBAAM,KAFQ,YAAC,EAGnCI,KAAmB,kBAAM,KAHS,YAAC,EAInCC,KAAiB,kBAAM,KAJW,YAAC,EAKnCG,KAAoB,kBAAM,KALQ,YAAC,EAMnCC,KAAkB,kBAAM,KANU,YAAC,EAOnCO,KAAoB,kBAAM,KAPQ,YAAC,EAQnCC,KAAkB,kBAAM,KARU,IAWxBJ,EAAO4B,YAAgB,CAAEjD,OAAML,QAAO0D,kBAAiBP,UC/B9DQ,EAAa,CACjBC,IAAK,OACLC,YACAC,UAAW,CAAC,UAGRC,EAAQC,YAAe,CAC3BC,QAAS,CAAEvC,KAAMwC,YAAeP,EAAYjC,GAAO2B,SAAUA,GAC7Dc,UAAUC,EACVC,WAAYC,YAAqB,CAC/BC,kBAAmB,CACjBC,eAAgB,CAACC,IAAOC,IAAWC,IAAOC,IAASC,IAAOC,UAOjD,GAAEf,QAAOgB,UAFNC,YAAajB,I,uCC/BlBkB,EAEG,YAFHA,EAGG,YAHHA,EAIA,S,wBCJAC,EAAW,SAACpC,GAAD,OAAWA,EAAMpB,KAAKrB,KAAKoD,OACtC0B,EAAS,SAACrC,GAAD,OAAWA,EAAMpB,KAAKgC,iB,OCwB7B0B,gBAJS,SAACtC,GAAD,MAAY,CAClCY,gBAAiByB,EAAOrC,MAGXsC,EAnBM,SAAC,GAIf,IAHMC,EAGP,EAHJC,UACA5B,EAEI,EAFJA,gBACG6B,EACC,+CACJ,OACE,cAAC,IAAD,2BACMA,GADN,IAEEC,OAAQ,SAACC,GAAD,OACN/B,EAAkB,cAAC2B,EAAD,eAAeI,IAAY,cAAC,IAAD,CAAUC,GAAG,kBCUnDN,gBAJS,SAACtC,GAAD,MAAY,CAClCY,gBAAiByB,EAAOrC,MAGXsC,EAnBK,SAAC,GAId,IAHMC,EAGP,EAHJC,UACA5B,EAEI,EAFJA,gBACG6B,EACC,+CACJ,OACE,cAAC,IAAD,2BACMA,GADN,IAEEC,OAAQ,SAACC,GAAD,OACN/B,EAAkB,cAAC,IAAD,CAAUgC,GAAG,cAAiB,cAACL,EAAD,eAAeI,W,oBCiBxDE,GA3BC,WACd,OACE,qBAAIC,UAAWC,KAAMC,QAArB,UACE,oBAAIF,UAAWC,KAAME,YAArB,SACE,cAAC,IAAD,CACEH,UAAWC,KAAMG,QACjBC,gBAAiBJ,KAAMK,cACvBC,OAAK,EACLT,GAAIT,EAJN,wBASF,oBAAIW,UAAWC,KAAME,YAArB,SACE,cAAC,IAAD,CACEH,UAAWC,KAAMG,QACjBC,gBAAiBJ,KAAMK,cACvBC,OAAK,EACLT,GAAIT,EAJN,yB,oBCGFmB,GAAqB,CACzBC,SAAUlF,KAGGiE,gBARS,SAACtC,GAAD,MAAY,CAClCW,MAAOyB,EAASpC,MAOsBsD,GAAzBhB,EAnBE,SAAC,GAAyB,IAAvB3B,EAAsB,EAAtBA,MAAO4C,EAAe,EAAfA,SACzB,OACE,qBAAKT,UAAWC,KAAMS,SAAtB,SACE,sBAAKV,UAAWC,KAAMxF,KAAtB,UACE,6BAAKoD,IACL,wBAAQ8C,QAASF,EAAjB,4B,oBCMOjB,gBAJS,SAACtC,GAAD,MAAY,CAClCqC,OAAQA,EAAOrC,MAGFsC,EAVA,SAAC,GAAgB,IAAdD,EAAa,EAAbA,OAChB,OACE,wBAAQS,UAAWC,KAAMW,IAAzB,SAA+BrB,EAAS,cAAC,GAAD,IAAe,cAAC,GAAD,SCCrDsB,I,MAAeC,gBAAK,kBAAM,wDAC1BC,GAAYD,gBAAK,kBAAM,uDACvBE,GAAWF,gBAAK,kBAAM,8DAEtBG,G,uKACJ,WACEC,KAAKrB,MAAMlE,mB,oBAKb,WACE,OACE,qCACE,cAAC,GAAD,IACA,cAAC,WAAD,CAAUwF,SAAU,KAApB,SACE,eAAC,IAAD,WACE,cAAC,GAAD,CAAaC,KAAM/B,EAAqBK,UAAWmB,KACnD,cAAC,GAAD,CAAaO,KAAM/B,EAAkBK,UAAWqB,KAChD,cAAC,GAAD,CAAcK,KAAM/B,EAAqBK,UAAWsB,KACpD,cAAC,IAAD,CAAUlB,GAAIT,gB,GAhBRI,aAwBZe,GAAqB,CACzB7E,eAAgBA,KAGH6D,eAAQ,KAAMgB,GAAdhB,CAAkCyB,IClCjDI,IAASzB,OACP,cAAC,IAAM0B,WAAP,UACE,cAAC,IAAD,UACE,cAAC,IAAD,CAAUnD,MAAOF,EAAQE,MAAzB,SACE,cAAC,IAAD,CAAaX,QAAS,KAAM2B,UAAWlB,EAAQkB,UAA/C,SACE,cAAC,GAAD,YAKRoC,SAASC,eAAe,W","file":"static/js/main.68bb032b.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"navList\":\"AuthNav_navList__3ZmGg\",\"navLink\":\"AuthNav_navLink__2s-2o\",\"activeNavLink\":\"AuthNav_activeNavLink__tsTKC\"};","import axios from \"axios\";\r\nimport {\r\n  REGISTERUSERREQUEST,\r\n  REGISTERUSERSUCCESS,\r\n  REGISTERUSERERROR,\r\n  LOGINUSERREQUEST,\r\n  LOGINUSERSUCCESS,\r\n  LOGINUSERERROR,\r\n  LOGOUTUSERREQUEST,\r\n  LOGOUTUSERSUCCESS,\r\n  LOGOUTUSERERROR,\r\n  GETCURUSERREQUEST,\r\n  GETCURUSERSUCCESS,\r\n  GETCURUSERERROR,\r\n} from \"./user-actions\";\r\n\r\naxios.defaults.baseURL = \"https://connections-api.herokuapp.com\";\r\n\r\nconst token = {\r\n  set(token) {\r\n    axios.defaults.headers.common.Authorization = `Bearer ${token}`;\r\n  },\r\n  unset() {\r\n    axios.defaults.headers.common.Authorization = \"\";\r\n  },\r\n};\r\n\r\nexport const registerUser = (user) => async (dispatch) => {\r\n  dispatch(REGISTERUSERREQUEST());\r\n  try {\r\n    const response = await axios.post(\"/users/signup\", user);\r\n    token.set(response.data.token);\r\n    dispatch(REGISTERUSERSUCCESS(response.data));\r\n  } catch (error) {\r\n    dispatch(REGISTERUSERERROR(error.message));\r\n  }\r\n};\r\n\r\nexport const loginUser = (user) => async (dispatch) => {\r\n  dispatch(LOGINUSERREQUEST);\r\n  try {\r\n    const response = await axios.post(\"/users/login\", user);\r\n    token.set(response.data.token);\r\n    dispatch(LOGINUSERSUCCESS(response.data));\r\n  } catch (error) {\r\n    dispatch(LOGINUSERERROR(error.message));\r\n  }\r\n};\r\n\r\nexport const logoutUser = () => async (dispatch) => {\r\n  dispatch(LOGOUTUSERREQUEST);\r\n  try {\r\n    await axios.post(\"/users/logout\");\r\n    token.unset();\r\n    dispatch(LOGOUTUSERSUCCESS());\r\n  } catch (error) {\r\n    dispatch(LOGOUTUSERERROR(error.message));\r\n  }\r\n};\r\n\r\nexport const getCurrentUser = () => async (dispatch, getState) => {\r\n  const {\r\n    auth: { token: persistedToken },\r\n  } = getState();\r\n\r\n  if (!persistedToken) {\r\n    return;\r\n  }\r\n\r\n  token.set(persistedToken);\r\n  dispatch(GETCURUSERREQUEST);\r\n  try {\r\n    const response = await axios.get(\"/users/current\");\r\n\r\n    dispatch(GETCURUSERSUCCESS(response.data));\r\n  } catch (error) {\r\n    dispatch(GETCURUSERERROR(error.message));\r\n  }\r\n};\r\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"userMenu\":\"UserMenu_userMenu__34uBi\",\"user\":\"UserMenu_user__39OJT\"};","import { createAction } from \"@reduxjs/toolkit\";\r\n\r\nexport const REGISTERUSERREQUEST = createAction(\"auth/registerUserRequest\");\r\nexport const REGISTERUSERSUCCESS = createAction(\"auth/registerUserSuccess\");\r\nexport const REGISTERUSERERROR = createAction(\"auth/registerUserError\");\r\n\r\nexport const LOGINUSERREQUEST = createAction(\"auth/loginUserRequest\");\r\nexport const LOGINUSERSUCCESS = createAction(\"auth/loginUserSuccess\");\r\nexport const LOGINUSERERROR = createAction(\"auth/loginUserError\");\r\n\r\nexport const LOGOUTUSERREQUEST = createAction(\"auth/logoutUserRequest\");\r\nexport const LOGOUTUSERSUCCESS = createAction(\"auth/logoutUserSuccess\");\r\nexport const LOGOUTUSERERROR = createAction(\"auth/logoutUserError\");\r\n\r\nexport const GETCURUSERREQUEST = createAction(\"auth/getCurrentUserRequest\");\r\nexport const GETCURUSERSUCCESS = createAction(\"auth/getCurrentUserSuccess\");\r\nexport const GETCURUSERERROR = createAction(\"auth/getCurrentUserError\");\r\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"nav\":\"AppBar_nav__3VhYQ\"};","import { createAction } from \"@reduxjs/toolkit\";\r\n\r\nexport const ADDCONTACTREQUEST = createAction(\"contacts/addContactRequest\");\r\n\r\nexport const ADDCONTACTSUCCESS = createAction(\"contacts/addContactSuccess\");\r\n\r\nexport const ADDCONTACTERROR = createAction(\"contacts/addContactError\");\r\n\r\nexport const FETCHCONTACTREQUEST = createAction(\"contacts/fetchContactRequest\");\r\n\r\nexport const FETCHCONTACTSUCCESS = createAction(\"contacts/fetchContactSuccess\");\r\n\r\nexport const FETCHCONTACTERROR = createAction(\"contacts/fetchContactError\");\r\n\r\nexport const DELETECONTACTREQUEST = createAction(\r\n  \"contacts/deleteContactRequest\"\r\n);\r\n\r\nexport const DELETECONTACTSUCCESS = createAction(\r\n  \"contacts/deleteContactSuccess\"\r\n);\r\n\r\nexport const DELETECONTACTERROR = createAction(\"contacts/deleteContactError\");\r\n\r\nexport const FILTERCHANGE = createAction(\"contacts/filterChange\");\r\n","import { createReducer } from \"@reduxjs/toolkit\";\r\nimport { combineReducers } from \"redux\";\r\nimport {\r\n  FETCHCONTACTREQUEST,\r\n  FETCHCONTACTERROR,\r\n  FETCHCONTACTSUCCESS,\r\n  ADDCONTACTREQUEST,\r\n  ADDCONTACTSUCCESS,\r\n  ADDCONTACTERROR,\r\n  DELETECONTACTREQUEST,\r\n  DELETECONTACTSUCCESS,\r\n  DELETECONTACTERROR,\r\n  FILTERCHANGE,\r\n} from \"./contacts-actions\";\r\n\r\nconst items = createReducer([], {\r\n  [FETCHCONTACTSUCCESS]: (_, { payload }) => {\r\n    return payload;\r\n  },\r\n\r\n  [ADDCONTACTSUCCESS]: (state, { payload }) => {\r\n    return [...state, payload];\r\n  },\r\n\r\n  [DELETECONTACTSUCCESS]: (state, { payload }) => {\r\n    return state.filter((el) => el.id !== payload);\r\n  },\r\n});\r\n\r\nconst filter = createReducer(\"\", {\r\n  [FILTERCHANGE.type]: (state, { payload }) => payload,\r\n});\r\n\r\nconst error = createReducer(\"\", {\r\n  [FETCHCONTACTERROR]: (_, { payload }) => {\r\n    return payload.message;\r\n  },\r\n  [ADDCONTACTERROR]: (_, { payload }) => {\r\n    return payload.message;\r\n  },\r\n  [DELETECONTACTERROR]: (_, { payload }) => {\r\n    return payload.message;\r\n  },\r\n});\r\n\r\nconst loading = createReducer(\"\", {\r\n  [ADDCONTACTREQUEST]: () => true,\r\n  [ADDCONTACTSUCCESS]: () => false,\r\n  [ADDCONTACTERROR]: () => false,\r\n  [FETCHCONTACTREQUEST]: () => true,\r\n  [FETCHCONTACTSUCCESS]: () => false,\r\n  [FETCHCONTACTERROR]: () => false,\r\n  [DELETECONTACTREQUEST]: () => true,\r\n  [DELETECONTACTSUCCESS]: () => false,\r\n  [DELETECONTACTERROR]: () => false,\r\n});\r\n\r\nexport const contacts = combineReducers({\r\n  items,\r\n  filter,\r\n  error,\r\n  loading,\r\n});\r\n","import { createReducer } from \"@reduxjs/toolkit\";\r\nimport { combineReducers } from \"redux\";\r\nimport {\r\n  REGISTERUSERSUCCESS,\r\n  REGISTERUSERERROR,\r\n  LOGINUSERSUCCESS,\r\n  LOGINUSERERROR,\r\n  LOGOUTUSERSUCCESS,\r\n  LOGOUTUSERERROR,\r\n  GETCURUSERSUCCESS,\r\n  GETCURUSERERROR,\r\n} from \"./user-actions\";\r\n\r\nconst userInitialState = { name: null, email: null };\r\n\r\nconst user = createReducer(userInitialState, {\r\n  [REGISTERUSERSUCCESS]: (_, { payload }) => payload.user,\r\n  [LOGINUSERSUCCESS]: (_, { payload }) => payload.user,\r\n  [LOGOUTUSERSUCCESS]: () => userInitialState,\r\n  [GETCURUSERSUCCESS]: (_, { payload }) => payload,\r\n});\r\n\r\nconst token = createReducer(null, {\r\n  [REGISTERUSERSUCCESS]: (_, { payload }) => payload.token,\r\n  [LOGINUSERSUCCESS]: (_, { payload }) => payload.token,\r\n  [LOGOUTUSERSUCCESS]: () => null,\r\n});\r\n\r\nconst error = createReducer(null, {\r\n  [REGISTERUSERERROR]: (_, { payload }) => payload,\r\n  [LOGINUSERERROR]: (_, { payload }) => payload,\r\n  [LOGOUTUSERERROR]: (_, { payload }) => payload,\r\n  [GETCURUSERERROR]: (_, { payload }) => payload,\r\n});\r\n\r\nconst isAuthenticated = createReducer(null, {\r\n  [REGISTERUSERSUCCESS]: () => true,\r\n  [REGISTERUSERERROR]: () => false,\r\n  [LOGINUSERSUCCESS]: () => true,\r\n  [LOGINUSERERROR]: () => false,\r\n  [LOGOUTUSERSUCCESS]: () => false,\r\n  [LOGOUTUSERERROR]: () => true,\r\n  [GETCURUSERSUCCESS]: () => true,\r\n  [GETCURUSERERROR]: () => false,\r\n});\r\n\r\nexport const auth = combineReducers({ user, token, isAuthenticated, error });\r\n","import {\r\n  persistStore,\r\n  persistReducer,\r\n  FLUSH,\r\n  REHYDRATE,\r\n  PAUSE,\r\n  PERSIST,\r\n  PURGE,\r\n  REGISTER,\r\n} from \"redux-persist\";\r\nimport storage from \"redux-persist/lib/storage\";\r\nimport { configureStore, getDefaultMiddleware } from \"@reduxjs/toolkit\";\r\nimport { contacts } from \"./contacts/contacts-reducer\";\r\nimport { auth } from \"./user/user-reducer\";\r\n\r\nconst userConfig = {\r\n  key: \"auth\",\r\n  storage,\r\n  whitelist: [\"token\"],\r\n};\r\n\r\nconst store = configureStore({\r\n  reducer: { auth: persistReducer(userConfig, auth), contacts: contacts },\r\n  devTools: process.env.NODE_ENV === \"development\",\r\n  middleware: getDefaultMiddleware({\r\n    serializableCheck: {\r\n      ignoredActions: [FLUSH, REHYDRATE, PAUSE, PERSIST, PURGE, REGISTER],\r\n    },\r\n  }),\r\n});\r\n\r\nconst persistor = persistStore(store);\r\n\r\nexport default { store, persistor };\r\n","export const routes = {\r\n  homePage: \"/\",\r\n  contactsPage: \"/contacts\",\r\n  registerPage: \"/register\",\r\n  loginPage: \"/login\",\r\n};\r\n","export const getEmail = (state) => state.auth.user.email;\r\nexport const isAuth = (state) => state.auth.isAuthenticated;\r\n","import React from \"react\";\r\nimport { Route, Redirect } from \"react-router-dom\";\r\nimport { connect } from \"react-redux\";\r\nimport PropTypes from \"prop-types\";\r\nimport { isAuth } from \"../../redux/user/user-selectors\";\r\n\r\nconst PrivateRoute = ({\r\n  component: Component,\r\n  isAuthenticated,\r\n  ...routeProps\r\n}) => {\r\n  return (\r\n    <Route\r\n      {...routeProps}\r\n      render={(props) =>\r\n        isAuthenticated ? <Component {...props} /> : <Redirect to=\"/login\" />\r\n      }\r\n    />\r\n  );\r\n};\r\n\r\nconst mapStateToProps = (state) => ({\r\n  isAuthenticated: isAuth(state),\r\n});\r\n\r\nexport default connect(mapStateToProps)(PrivateRoute);\r\n\r\nPrivateRoute.propTypes = {\r\n  isAuthenticated: PropTypes.bool,\r\n};\r\n","import React from \"react\";\r\nimport { Route, Redirect } from \"react-router-dom\";\r\nimport { connect } from \"react-redux\";\r\nimport PropTypes from \"prop-types\";\r\nimport { isAuth } from \"../../redux/user/user-selectors\";\r\n\r\nconst PublicRoute = ({\r\n  component: Component,\r\n  isAuthenticated,\r\n  ...routeProps\r\n}) => {\r\n  return (\r\n    <Route\r\n      {...routeProps}\r\n      render={(props) =>\r\n        isAuthenticated ? <Redirect to=\"/contacts\" /> : <Component {...props} />\r\n      }\r\n    />\r\n  );\r\n};\r\n\r\nconst mapStateToProps = (state) => ({\r\n  isAuthenticated: isAuth(state),\r\n});\r\n\r\nexport default connect(mapStateToProps)(PublicRoute);\r\n\r\nPublicRoute.propTypes = {\r\n  isAuthenticated: PropTypes.bool,\r\n};\r\n","import React from \"react\";\r\nimport { NavLink } from \"react-router-dom\";\r\nimport { routes } from \"../../../services/routes\";\r\nimport style from \"./AuthNav.module.css\";\r\n\r\nconst AuthNav = () => {\r\n  return (\r\n    <ul className={style.navList}>\r\n      <li className={style.navListItem}>\r\n        <NavLink\r\n          className={style.navLink}\r\n          activeClassName={style.activeNavLink}\r\n          exact\r\n          to={routes.registerPage}\r\n        >\r\n          Register\r\n        </NavLink>\r\n      </li>\r\n      <li className={style.navListItem}>\r\n        <NavLink\r\n          className={style.navLink}\r\n          activeClassName={style.activeNavLink}\r\n          exact\r\n          to={routes.loginPage}\r\n        >\r\n          LogIn\r\n        </NavLink>\r\n      </li>\r\n    </ul>\r\n  );\r\n};\r\n\r\nexport default AuthNav;\r\n","import React from \"react\";\r\nimport { connect } from \"react-redux\";\r\nimport PropTypes from \"prop-types\";\r\nimport { getEmail } from \"../../../redux/user/user-selectors\";\r\nimport { logoutUser } from \"../../../redux/user/user-operations\";\r\nimport style from \"./UserMenu.module.css\";\r\n\r\nconst UserMenu = ({ email, onLogout }) => {\r\n  return (\r\n    <div className={style.userMenu}>\r\n      <div className={style.user}>\r\n        <h1>{email}</h1>\r\n        <button onClick={onLogout}>LogOut</button>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nconst mapStateToProps = (state) => ({\r\n  email: getEmail(state),\r\n});\r\n\r\nconst mapDispatchToProps = {\r\n  onLogout: logoutUser,\r\n};\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(UserMenu);\r\n\r\nUserMenu.propTypes = {\r\n  email: PropTypes.string,\r\n  onLogout: PropTypes.func,\r\n};\r\n","import React from \"react\";\r\nimport { connect } from \"react-redux\";\r\nimport PropTypes from \"prop-types\";\r\nimport AuthNav from \"./AuthNav/AuthNav\";\r\nimport UserMenu from \"./UserMenu/UserMenu\";\r\nimport { isAuth } from \"../../redux/user/user-selectors\";\r\nimport style from \"./AppBar.module.css\";\r\n\r\nconst AppBar = ({ isAuth }) => {\r\n  return (\r\n    <header className={style.nav}>{isAuth ? <UserMenu /> : <AuthNav />}</header>\r\n  );\r\n};\r\n\r\nconst mapStateToProps = (state) => ({\r\n  isAuth: isAuth(state),\r\n});\r\n\r\nexport default connect(mapStateToProps)(AppBar);\r\n\r\nAppBar.propTypes = {\r\n  isAuth: PropTypes.bool,\r\n};\r\n","import React, { Component, Suspense, lazy } from \"react\";\r\nimport { Switch, Redirect } from \"react-router-dom\";\r\nimport { connect } from \"react-redux\";\r\nimport PropTypes from \"prop-types\";\r\nimport { routes } from \"../../services/routes\";\r\nimport { getCurrentUser } from \"../../redux/user/user-operations\";\r\nimport PrivateRoute from \"../AppBar/PrivateRoute\";\r\nimport PublicRoute from \"../AppBar/PublicRoute\";\r\nimport AppBar from \"../AppBar/AppBar\";\r\nimport \"./App.css\";\r\n\r\nconst RegisterPage = lazy(() => import(\"../../pages/RegisterPage/RegisterPage\"));\r\nconst LoginPage = lazy(() => import(\"../../pages/LoginPage/LoginPage\"));\r\nconst Contacts = lazy(() => import(\"../../pages/Contacts/Contacts\"));\r\n\r\nclass App extends Component {\r\n  componentDidMount() {\r\n    this.props.getCurrentUser();\r\n  }\r\n  static propTypes = {\r\n    getCurrentUser: PropTypes.func,\r\n  };\r\n  render() {\r\n    return (\r\n      <>\r\n        <AppBar />\r\n        <Suspense fallback={null}>\r\n          <Switch>\r\n            <PublicRoute path={routes.registerPage} component={RegisterPage} />\r\n            <PublicRoute path={routes.loginPage} component={LoginPage} />\r\n            <PrivateRoute path={routes.contactsPage} component={Contacts} />\r\n            <Redirect to={routes.loginPage} />\r\n          </Switch>\r\n        </Suspense>\r\n      </>\r\n    );\r\n  }\r\n}\r\n\r\nconst mapDispatchToProps = {\r\n  getCurrentUser: getCurrentUser,\r\n};\r\n\r\nexport default connect(null, mapDispatchToProps)(App);\r\n","import React from \"react\";\r\nimport ReactDOM from \"react-dom\";\r\nimport { BrowserRouter } from \"react-router-dom\";\r\nimport { Provider } from \"react-redux\";\r\nimport { PersistGate } from \"redux-persist/integration/react\";\r\nimport \"./index.css\";\r\nimport storage from \"./redux/store\";\r\nimport App from \"./components/App/App\";\r\n\r\nReactDOM.render(\r\n  <React.StrictMode>\r\n    <BrowserRouter>\r\n      <Provider store={storage.store}>\r\n        <PersistGate loading={null} persistor={storage.persistor}>\r\n          <App />\r\n        </PersistGate>\r\n      </Provider>\r\n    </BrowserRouter>\r\n  </React.StrictMode>,\r\n  document.getElementById(\"root\")\r\n);\r\n"],"sourceRoot":""}